const int pose_071[] = {90, 150, 150, 30, 90, 90, 90, 30, 35, 150, 90, 100, 30, 30, 30, 150, 150, 150, 90, 90};
const int pose_070[] = {110, 150, 120, 65, 110, 90, 105, 30, 30, 150, 90, 90, 20, 30, 30, 120, 150, 150, 90, 90};
const int pose_069[] = {90, 100, 95, 30, 90, 90, 90, 80, 85, 150, 90, 90, 30, 120, 90, 150, 60, 30, 120, 90};
const int pose_068[] = {90, 150, 150, 30, 90, 90, 90, 30, 30, 150, 90, 90, 120, 100, 10, 60, 80, 170, 90, 90};
const int pose_067[] = {70, 150, 150, 30, 90, 90, 70, 30, 30, 150, 70, 90, 90, 30, 30, 170, 150, 150, 90, 90};
const int pose_066[] = {90, 150, 150, 30, 90, 90, 90, 30, 30, 150, 90, 90, 30, 100, 10, 150, 80, 170, 90, 90};
const int pose_065[] = {90, 150, 150, 30, 90, 90, 90, 30, 30, 150, 90, 90, 0, 30, 30, 90, 150, 150, 90, 90};
const int pose_064[] = {112, 150, 140, 60, 110, 90, 112, 30, 30, 150, 90, 90, 10, 30, 30, 90, 150, 150, 90, 90};
const int pose_063[] = {2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21};
const int pose_062[] = {90, 180, 120, 130, 90, 90, 90, 0, 60, 50, 90, 90, 110, 30, 30, 70, 150, 150, 90, 90};
const int pose_061[] = {90, 150, 150, 30, 90, 90, 90, 30, 30, 150, 90, 90, 30, 90, 0, 150, 90, 180, 90, 90};
const int pose_060[] = {90, 70, 60, 0, 150, 90, 90, 110, 120, 180, 30, 90, 90, 30, 30, 90, 150, 150, 90, 90};
const int pose_059[] = {110, 150, 150, 30, 110, 90, 105, 30, 30, 150, 90, 90, 30, 30, 30, 150, 150, 150, 90, 90};
const int pose_058[] = {90, 70, 60, 30, 150, 90, 90, 110, 120, 150, 30, 90, 90, 30, 30, 90, 150, 150, 90, 90};
const int pose_057[] = {90, 70, 60, 30, 110, 90, 110, 30, 30, 150, 90, 90, 30, 90, 30, 150, 90, 150, 90, 90};
const int pose_056[] = {90, 70, 60, 30, 90, 90, 90, 110, 120, 150, 90, 90, 30, 60, 30, 150, 120, 150, 90, 90};
const int pose_055[] = {110, 150, 150, 30, 110, 90, 114, 30, 30, 150, 90, 90, 30, 150, 30, 150, 30, 150, 90, 90};
const int pose_054[] = {112, 130, 140, 10, 110, 90, 112, 30, 30, 150, 90, 90, 10, 30, 30, 90, 150, 150, 90, 90};
const int pose_053[] = {90, 150, 150, 30, 90, 60, 90, 30, 30, 150, 90, 60, 10, 30, 30, 130, 150, 150, 90, 90};
const int pose_052[] = {90, 70, 60, 30, 150, 90, 90, 110, 120, 150, 30, 90, 30, 60, 30, 150, 120, 150, 90, 90};
const int pose_051[] = {110, 150, 150, 30, 110, 90, 110, 30, 30, 150, 90, 90, 30, 90, 30, 150, 90, 150, 90, 90};
const int pose_050[] = {75, 150, 145, 30, 90, 80, 70, 30, 30, 150, 70, 90, 30, 30, 30, 150, 150, 150, 90, 90};
const int pose_049[] = {90, 100, 95, 30, 90, 90, 90, 80, 85, 150, 90, 90, 30, 120, 150, 150, 60, 90, 60, 90};
const int pose_048[] = {90, 150, 150, 30, 90, 90, 90, 30, 30, 150, 90, 90, 30, 90, 120, 150, 90, 60, 90, 90};
const int pose_047[] = {110, 150, 150, 30, 110, 90, 110, 30, 30, 150, 110, 90, 50, 30, 30, 150, 120, 150, 90, 90};
const int pose_046[] = {90, 150, 150, 30, 90, 90, 90, 30, 30, 150, 90, 90, 120, 60, 120, 60, 120, 120, 90, 90};
const int pose_045[] = {90, 150, 150, 30, 90, 90, 90, 30, 30, 150, 90, 90, 120, 60, 120, 60, 120, 120, 60, 90};
const int pose_044[] = {75, 150, 150, 30, 90, 90, 70, 30, 30, 150, 70, 100, 30, 30, 30, 150, 150, 150, 90, 90};
const int pose_043[] = {110, 150, 150, 30, 110, 80, 105, 30, 30, 150, 90, 90, 30, 30, 30, 150, 150, 150, 90, 90};
const int pose_042[] = {90, 150, 145, 30, 90, 80, 90, 30, 30, 150, 90, 90, 30, 30, 30, 150, 150, 150, 90, 90};
const int pose_041[] = {90, 150, 150, 30, 90, 90, 90, 30, 30, 150, 90, 90, 90, 30, 30, 180, 150, 150, 90, 90};
const int pose_040[] = {90, 150, 150, 30, 90, 90, 90, 30, 30, 150, 90, 90, 120, 60, 60, 60, 120, 60, 120, 90};
const int pose_039[] = {90, 150, 150, 30, 90, 90, 90, 30, 30, 150, 90, 90, 180, 90, 60, 150, 150, 150, 90, 90};
const int pose_038[] = {90, 150, 120, 65, 90, 90, 90, 30, 30, 150, 90, 90, 30, 30, 30, 150, 150, 150, 90, 90};
const int pose_037[] = {90, 180, 140, 130, 90, 90, 90, 0, 40, 50, 90, 90, 110, 30, 30, 70, 150, 150, 90, 90};
const int pose_036[] = {70, 150, 150, 30, 90, 90, 70, 50, 40, 170, 70, 90, 90, 30, 30, 170, 150, 150, 90, 90};
const int pose_035[] = {75, 150, 150, 30, 90, 90, 70, 30, 60, 120, 70, 90, 60, 30, 30, 160, 150, 150, 90, 90};
const int pose_034[] = {110, 150, 150, 30, 110, 90, 114, 30, 30, 150, 90, 90, 30, 90, 30, 150, 90, 150, 90, 90};
const int pose_033[] = {110, 150, 150, 30, 112, 90, 90, 30, 30, 150, 90, 90, 30, 60, 30, 120, 150, 150, 90, 90};
const int pose_032[] = {90, 150, 150, 30, 90, 90, 90, 30, 30, 150, 90, 90, 90, 30, 90, 180, 150, 120, 90, 90};
const int pose_031[] = {70, 150, 150, 30, 90, 90, 70, 30, 30, 150, 70, 90, 30, 150, 30, 150, 30, 150, 90, 90};
const int pose_030[] = {90, 150, 150, 30, 90, 90, 90, 30, 60, 120, 90, 90, 30, 30, 30, 150, 150, 150, 90, 90};
const int pose_029[] = {90, 150, 150, 30, 90, 90, 90, 30, 30, 150, 90, 90, 120, 180, 180, 60, 0, 0, 90, 90};
const int pose_028[] = {90, 150, 150, 30, 90, 90, 90, 30, 30, 150, 90, 90, 180, 90, 90, 150, 150, 150, 90, 90};
const int pose_027[] = {90, 100, 95, 30, 90, 90, 90, 80, 85, 150, 90, 90, 30, 120, 120, 150, 60, 60, 90, 90};
const int pose_026[] = {90, 150, 150, 30, 90, 90, 70, 30, 30, 150, 68, 90, 50, 30, 30, 150, 120, 150, 90, 90};
const int pose_025[] = {90, 150, 150, 30, 90, 90, 90, 30, 30, 150, 90, 90, 30, 30, 30, 150, 150, 150, 90, 90};
const int pose_024[] = {90, 150, 150, 30, 90, 90, 90, 30, 30, 150, 90, 90, 180, 90, 120, 150, 150, 150, 90, 90};
const int pose_023[] = {90, 150, 150, 30, 90, 90, 90, 30, 30, 150, 90, 90, 30, 120, 30, 150, 60, 150, 90, 90};
const int pose_022[] = {90, 150, 150, 30, 90, 90, 90, 30, 30, 150, 90, 90, 180, 20, 90, 0, 160, 90, 90, 90};
const int pose_021[] = {75, 150, 150, 30, 90, 90, 70, 30, 30, 150, 70, 90, 30, 30, 30, 150, 150, 150, 90, 90};
const int pose_020[] = {90, 150, 150, 30, 90, 90, 90, 30, 30, 150, 90, 90, 100, 90, 90, 80, 90, 90, 90, 90};
const int pose_019[] = {90, 150, 150, 30, 90, 90, 90, 30, 30, 150, 90, 90, 100, 30, 30, 80, 150, 150, 90, 90};
const int pose_018[] = {112, 150, 150, 30, 110, 90, 112, 30, 30, 150, 90, 90, 10, 30, 30, 90, 150, 150, 90, 90};
const int pose_017[] = {110, 150, 150, 30, 110, 90, 105, 30, 35, 150, 90, 100, 30, 30, 30, 150, 150, 150, 90, 90};
const int pose_016[] = {90, 160, 150, 60, 90, 90, 90, 20, 30, 120, 90, 90, 90, 30, 90, 180, 150, 120, 90, 90};
const int pose_015[] = {90, 150, 150, 30, 90, 90, 90, 30, 30, 150, 90, 90, 50, 50, 30, 130, 130, 150, 90, 90};
const int pose_014[] = {70, 150, 150, 30, 90, 90, 70, 30, 30, 150, 70, 90, 30, 90, 30, 150, 90, 150, 90, 90};
const int pose_013[] = {90, 160, 150, 60, 90, 90, 90, 20, 30, 120, 90, 90, 0, 30, 60, 90, 150, 90, 90, 90};
const int pose_012[] = {70, 150, 150, 30, 70, 90, 70, 30, 30, 150, 70, 90, 30, 90, 30, 150, 120, 150, 90, 90};
const int pose_011[] = {90, 150, 150, 30, 90, 90, 90, 30, 30, 150, 90, 90, 0, 30, 60, 90, 150, 90, 90, 90};
const int pose_010[] = {90, 160, 150, 60, 90, 90, 90, 20, 30, 120, 90, 90, 50, 50, 30, 130, 130, 150, 90, 90};
const int pose_009[] = {70, 150, 150, 30, 90, 90, 70, 30, 40, 120, 70, 90, 90, 30, 30, 170, 150, 150, 90, 90};
const int pose_008[] = {90, 150, 150, 30, 90, 90, 90, 30, 30, 150, 90, 90, 180, 30, 30, 0, 150, 150, 90, 90};
const int pose_007[] = {90, 150, 150, 30, 90, 90, 90, 30, 30, 150, 90, 90, 120, 60, 60, 60, 120, 120, 90, 90};
const int pose_006[] = {90, 150, 150, 30, 90, 120, 90, 30, 30, 150, 90, 120, 50, 30, 30, 170, 150, 150, 90, 90};
const int pose_005[] = {90, 150, 150, 30, 90, 90, 90, 30, 30, 150, 90, 90, 180, 20, 30, 0, 160, 150, 90, 90};
const int pose_004[] = {70, 150, 150, 30, 70, 90, 70, 30, 30, 150, 70, 90, 30, 60, 30, 120, 150, 150, 90, 90};
const int pose_003[] = {90, 150, 150, 30, 90, 90, 90, 30, 30, 150, 90, 90, 120, 180, 30, 60, 0, 150, 90, 90};
const int pose_002[] = {70, 150, 150, 30, 90, 90, 70, 110, 120, 150, 70, 90, 30, 90, 30, 150, 90, 150, 90, 90};
const int pose_001[] = {90, 150, 150, 30, 90, 90, 90, 30, 30, 150, 90, 90, 30, 150, 90, 150, 30, 90, 90, 90};
const int pose_000[] = {110, 150, 150, 30, 110, 90, 110, 30, 30, 150, 110, 90, 30, 60, 30, 150, 90, 150, 90, 90};
#include <Wire.h>
// #include <Servo.h>
#include <Adafruit_PWMServoDriver.h>
//Servo servo[20] = {};


#include "hash_v3.h"
#define N_MOTORS 2

#define SERVOMIN  125                                             // this is the 'minimum' pulse length count (out of 4096)
#define SERVOMAX  625  

void hash_v3::setMotorAngle(int motor, int ang) {
  //gets angle in degree and returns the pulse width 
  Serial.print("setMotorAngle"); 
    int pulse = map(ang,0, 180, SERVOMIN,SERVOMAX);  // map angle of 0 to 180 to Servo min and Servo max 
    board1.setPWM(motor, 0, pulse);
    
    Serial.print(motor);
    Serial.print(" ");
     Serial.println(ang);
}


//hash_v3::hash_v3(){
//
//}
/* Initializing servo drive and OLED display */
void hash_v3::init_hash() {
  // int servo_pins[20] = pose_063;
  // for (int i = 0; i < 20; i++) {
  //   servo[i].attach(servo_pins[i]);
  // }
  //board1 = Adafruit_PWMServoDriver(0x40);
  board1.begin();
  board1.setPWMFreq(60);
  Serial.println("init");
}

/* Initial position */
void hash_v3::initial_position() {
  int degree_array[20] = pose_025;
  for (int i = 0; i < 20; i++) {
    servo_position[i] = degree_array[i];
  }
  move_servo(2000, degree_array);
}
/* Moving each servo at given time interval */
void hash_v3::move_servo(int time, int  servo_target[]) {

  if (time > 10) {
    for (int i = 0; i < 20; i++) {
      increment[i] = ((servo_target[i]) - servo_position[i]) / (time / 10.0);
    }
    final_time =  millis() + time;

    for (int iteration = 1; millis() < final_time; iteration++) {
      partial_time = millis() + 10;

      for (int i = 0; i < N_MOTORS; i++) {
        //servo[i].write((int)(servo_position[i] + (iteration * increment[i])));
        setMotorAngle(i, (int)(servo_position[i] + (iteration * increment[i])));
        
      }
      while (millis() < partial_time);
    }
  }
  else {
    for (int i = 0; i < N_MOTORS; i++) {
      //servo[i].write((int)servo_target[i]);
      setMotorAngle(i, (int)servo_target[i]);
    } 
  }
  for (int i = 0; i < 20; i++) {
    servo_position[i] = servo_target[i];
  }
}

/******************************************************************************************************/

void hash_v3::say_hi(int count, int speed) {

  int degree_array1[20] = pose_028;
  move_servo(speed * 2, degree_array1);
  for (int i = 1; i <= count; i++) {
    int degree_array2[20] = pose_039;
    int degree_array3[20] = pose_024;
    move_servo(speed, degree_array2);
    move_servo(speed, degree_array3);
  }
  int degree_array4[20] = pose_028;
  int degree_array5[20] = pose_025;
  move_servo(speed, degree_array4);
  move_servo(speed * 2, degree_array5);
}

/******************************************************************************************************/

void hash_v3::hands_up(int count, int speed) {

  int degree_array1[20] = pose_025;
  move_servo(speed, degree_array1);
  for (int i = 1; i <= count; i++) {
    int degree_array2[20] = pose_008;
    move_servo(speed, degree_array2);
    delay(3000);
  }
  int degree_array3[20] = pose_025;
  move_servo(speed , degree_array3);
}

/******************************************************************************************************/

void hash_v3::forward(int steps, int speed) {
  //  if (speed < 500) {
  //    speed = 500;
  //  }
  int degree_array1[20] = pose_025;
  int degree_array2[20] = pose_059;
  int degree_array3[20] = pose_070;
  int degree_array4[20] = pose_038;
  move_servo(speed, degree_array1);
  move_servo(speed, degree_array2);
  move_servo(speed, degree_array3);
  move_servo(speed, degree_array4);
  for (int i = 1; i <= steps; i++) {
    int degree_array5[20] = pose_021;
    int degree_array6[20] = pose_035;
    int degree_array7[20] = pose_030;
    int degree_array8[20] = pose_059;
    int degree_array9[20] = pose_070;
    int degree_array10[20] = pose_038;
    move_servo(speed, degree_array5);
    move_servo(speed, degree_array6);
    move_servo(speed, degree_array7);
    move_servo(speed, degree_array8);
    move_servo(speed, degree_array9);
    move_servo(speed, degree_array10);
  }
  int degree_array11[20] = pose_025;
  move_servo(speed, degree_array11);
}

/******************************************************************************************************************/

void hash_v3::turn_right(int steps, int speed) {
  //  if (speed < 500) {
  //    speed = 500;
  //  }
  int pwm_array1[20] = pose_025;
  move_servo(speed, pwm_array1);
  for (int i = 1; i <= steps; i++) {
    int pwm_array2[20] = pose_021;
    int pwm_array3[20] = pose_050;
    int pwm_array4[20] = pose_042;
    int pwm_array5[20] = pose_043;
    int pwm_array6[20] = pose_059;
    int pwm_array7[20] = pose_025;
    move_servo(speed, pwm_array2);
    move_servo(speed, pwm_array3);
    move_servo(speed, pwm_array4);
    move_servo(speed, pwm_array5);
    move_servo(speed, pwm_array6);
    move_servo(speed, pwm_array7);
  }
  int pwm_array8[20] = pose_025;
  move_servo(speed, pwm_array8);
}

/******************************************************************************************************/

void hash_v3::turn_left(int steps, int speed) {
  //  if (speed < 500) {
  //    speed = 500;
  //  }
  int pwm_array1[20] = pose_025;
  move_servo(speed, pwm_array1);
  for (int i = 1; i <= steps; i++) {
    int pwm_array2[20] = pose_059;
    int pwm_array3[20] = pose_017;
    int pwm_array4[20] = pose_071;
    int pwm_array5[20] = pose_044;
    int pwm_array6[20] = pose_021;
    int pwm_array7[20] = pose_025;
    move_servo(speed, pwm_array2);
    move_servo(speed, pwm_array3);
    move_servo(speed, pwm_array4);
    move_servo(speed, pwm_array5);
    move_servo(speed, pwm_array6);
    move_servo(speed, pwm_array7);
  }
  int pwm_array8[20] = pose_025;
  move_servo(speed, pwm_array8);
}

/******************************************************************************************************/

void hash_v3::move_right(int steps, int speed) {
  int pwm_array1[20] = pose_025;
  move_servo(speed, pwm_array1);
  for (int i = 1; i <= steps; i++) {
    int pwm_array2[20] = pose_033;
    int pwm_array3[20] = pose_004;
    int pwm_array4[20] = pose_025;
    move_servo(speed, pwm_array2);
    move_servo(speed, pwm_array3);
    move_servo(speed, pwm_array4);
  }
  int pwm_array5[20] = pose_025;
  move_servo(speed, pwm_array5);
}

/******************************************************************************************************/

void hash_v3::move_left(int steps, int speed) {
  int pwm_array1[20] = pose_025;
  move_servo(speed, pwm_array1);
  for (int i = 1; i <= steps; i++) {
    int pwm_array2[20] = pose_026;
    int pwm_array3[20] = pose_047;
    int pwm_array4[20] = pose_025;
    move_servo(speed, pwm_array2);
    move_servo(speed, pwm_array3);
    move_servo(speed, pwm_array4);
  }
  int pwm_array5[20] = pose_025;
  move_servo(speed, pwm_array5);
}

/******************************************************************************************************/

void hash_v3::ball_kick_right(int count, int speed) {
  int pwm_array1[20] = pose_025;
  move_servo(speed, pwm_array1);
  for (int i = 1; i <= count; i++) {
    int pwm_array2[20] = pose_018;
    int pwm_array3[20] = pose_054;
    int pwm_array4[20] = pose_064;
    int pwm_array5[20] = pose_018;
    move_servo(speed, pwm_array2);
    move_servo(speed / 2, pwm_array3);
    move_servo(speed / 2, pwm_array4);
    move_servo(speed, pwm_array5);
  }
  int pwm_array6[20] = pose_025;
  move_servo(speed, pwm_array6);
}

/******************************************************************************************************/

void hash_v3::ball_kick_left(int count, int speed) {
  int pwm_array1[20] = pose_025;
  move_servo(speed, pwm_array1);
  for (int i = 1; i <= count; i++) {
    int pwm_array2[20] = pose_067;
    int pwm_array3[20] = pose_036;
    int pwm_array4[20] = pose_009;
    int pwm_array5[20] = pose_067;
    move_servo(speed, pwm_array2);
    move_servo(speed / 2, pwm_array3);
    move_servo(speed / 2, pwm_array4);
    move_servo(speed, pwm_array5);
  }
  int pwm_array6[20] = pose_025;
  move_servo(speed, pwm_array6);
}

/******************************************************************************************************/

void hash_v3::max_sit(int count, int speed) {
  for (int i = 1; i <= count; i++) {
    int degree_array1[20] = pose_056;
    int degree_array2[20] = pose_025;
    move_servo(speed, degree_array1);
    delay(3000);
    move_servo(speed, degree_array2);
  }
}

/******************************************************************************************************/

void hash_v3::bow(int count, int speed) {
  for (int i = 1; i <= count; i++) {
    int degree_array1[20] = pose_015;
    int degree_array2[20] = pose_010;
    int degree_array3[20] = pose_015;
    move_servo(speed / 2, degree_array1);
    move_servo(speed, degree_array2);
    delay(3000);
    move_servo(speed, degree_array3);
  }
  int pwm_array4[20] = pose_025;
  move_servo(speed, pwm_array4);
}

/******************************************************************************************************/

void hash_v3::right_bow(int count, int speed) {
  for (int i = 1; i <= count; i++) {
    int degree_array1[20] = pose_041;
    int degree_array2[20] = pose_032;
    int degree_array3[20] = pose_016;
    int degree_array4[20] = pose_032;
    int degree_array5[20] = pose_041;
    move_servo(speed / 2, degree_array1);
    move_servo(speed / 2, degree_array2);
    move_servo(speed, degree_array3);
    delay(2000);
    move_servo(speed, degree_array4);
    move_servo(speed / 2, degree_array5);
  }
  int degree_array6[20] = pose_025;
  move_servo(speed, degree_array6);
}

/******************************************************************************************************/

void hash_v3::left_bow(int count, int speed) {
  for (int i = 1; i <= count; i++) {
    int degree_array1[20] = pose_065;
    int degree_array2[20] = pose_011;
    int degree_array3[20] = pose_013;
    int degree_array4[20] = pose_011;
    int degree_array5[20] = pose_065;
    move_servo(speed / 2, degree_array1);
    move_servo(speed / 2, degree_array2);
    move_servo(speed, degree_array3);
    delay(2000);
    move_servo(speed, degree_array4);
    move_servo(speed / 2, degree_array5);
  }
  int degree_array6[20] = pose_025;
  move_servo(speed, degree_array6);
}

/******************************************************************************************************/

void hash_v3::ape_move(int count, int speed) {
  int degree_array1[20] = pose_007;
  int degree_array2[20] = pose_046;
  move_servo(speed, degree_array1);
  move_servo(speed, degree_array2);
  for (int i = 1; i <= count; i++) {
    int degree_array3[20] = pose_040;
    int degree_array4[20] = pose_045;
    move_servo(speed / 2, degree_array3);
    move_servo(speed / 2, degree_array4);
  }
  int degree_array5[20] = pose_007;
  int degree_array6[20] = pose_025;
  move_servo(speed, degree_array5);
  move_servo(speed, degree_array6);
}

/******************************************************************************************************/

void hash_v3::push_up(int count, int speed) {
  int degree_array1[20] = pose_056;
  int degree_array2[20] = pose_052;
  int degree_array3[20] = pose_058;
  int degree_array4[20] = pose_060;
  int degree_array5[20] = pose_019;
  move_servo(speed, degree_array1);
  move_servo(speed, degree_array2);
  move_servo(speed, degree_array3);
  move_servo(speed, degree_array4);
  move_servo(speed, degree_array5);
  for (int i = 1; i <= count; i++) {
    int degree_array6[20] = pose_020;
    int degree_array7[20] = pose_019;
    move_servo(speed, degree_array6);
    move_servo(speed, degree_array7);
  }
  int degree_array8[20] = pose_020;
  int degree_array9[20] = pose_029;
  int degree_array10[20] = pose_003;
  int degree_array11[20] = pose_068;
  int degree_array12[20] = pose_066;
  int degree_array13[20] = pose_025;
  move_servo(speed, degree_array8);
  move_servo(speed, degree_array9);
  move_servo(speed, degree_array10);
  move_servo(speed, degree_array11);
  move_servo(speed, degree_array12);
  move_servo(speed, degree_array13);
}

/******************************************************************************************************/

void hash_v3::clap(int count, int speed) {
  int degree_array1[20] = pose_005;
  move_servo(speed, degree_array1);
  for (int i = 1; i <= count; i++) {
    int degree_array2[20] = pose_022;
    int degree_array3[20] = pose_005;
    move_servo(speed / 2, degree_array2);
    move_servo(speed / 2, degree_array3);
  }
  int degree_array4[20] = pose_025;
  move_servo(speed, degree_array4);
}

/******************************************************************************************************/

void hash_v3::right_leg_up(int count, int speed) {
  int degree_array1[20] = pose_034;
  move_servo(speed, degree_array1);
  for (int i = 1; i <= count; i++) {
    int degree_array2[20] = pose_055;
    int degree_array3[20] = pose_034;
    move_servo(speed / 2, degree_array2);
    move_servo(speed / 2, degree_array3);
  }
  int degree_array4[20] = pose_025;
  move_servo(speed, degree_array4);
}

/******************************************************************************************************/

void hash_v3::left_leg_up(int count, int speed) {

  int degree_array1[20] = pose_014;
  move_servo(speed, degree_array1);
  for (int i = 1; i <= count; i++) {
    int degree_array2[20] = pose_031;
    int degree_array3[20] = pose_014;
    move_servo(speed / 2, degree_array2);
    move_servo(speed / 2, degree_array3);
  }

  int degree_array4[20] = pose_025;
  move_servo(speed, degree_array4);
}

/******************************************************************************************************/

void hash_v3::hip_pose(int count, int speed) {
  for (int i = 1; i <= count; i++) {
    int degree_array1[20] = pose_048;
    int degree_array2[20] = pose_025;
    move_servo(speed, degree_array1);
    delay(3000);
    move_servo(speed, degree_array2);
  }
}

/******************************************************************************************************/

void hash_v3::right_leg_balance(int count, int speed) {
  for (int i = 1; i <= count; i++) {
    int degree_array1[20] = pose_014;
    int degree_array2[20] = pose_002;
    int degree_array3[20] = pose_014;
    int degree_array4[20] = pose_025;
    move_servo(speed, degree_array1);
    delay(3000);
    move_servo(speed, degree_array2);
    move_servo(speed, degree_array3);
    move_servo(speed, degree_array4);
  }
}

/******************************************************************************************************/

void hash_v3::left_leg_balance(int count, int speed) {
  for (int i = 1; i <= count; i++) {
    int degree_array1[20] = pose_051;
    int degree_array2[20] = pose_057;
    int degree_array3[20] = pose_051;
    int degree_array4[20] = pose_025;
    move_servo(speed, degree_array1);
    delay(3000);
    move_servo(speed, degree_array2);
    move_servo(speed, degree_array3);
    move_servo(speed, degree_array4);
  }
}

/******************************************************************************************************/

void hash_v3::flying_action(int count, int speed) {
  int degree_array1[20] = pose_023;
  move_servo(speed, degree_array1);
  for (int i = 1; i <= count; i++) {
    int degree_array2[20] = pose_001;
    int degree_array3[20] = pose_061;
    move_servo(speed / 2, degree_array2);
    move_servo(speed / 2, degree_array3);
  }
  int degree_array4[20] = pose_023;
  int degree_array5[20] = pose_025;
  move_servo(speed / 2 , degree_array4);
  move_servo(speed, degree_array5);
}

/******************************************************************************************************/

void hash_v3::hand_sit_zigzak(int count, int speed) {

  int degree_array1[20] = pose_027;
  move_servo(speed, degree_array1);
  for (int i = 1; i <= count; i++) {
    int degree_array2[20] = pose_069;
    int degree_array3[20] = pose_049;
    move_servo(speed / 2, degree_array2);
    move_servo(speed / 2, degree_array3);
  }
  int degree_array4[20] = pose_027;
  int degree_array5[20] = pose_025;
  move_servo(speed / 2 , degree_array4);
  move_servo(speed, degree_array5);
}

/******************************************************************************************************/

void hash_v3::side_shake(int count, int speed) {

  int degree_array1[20] = pose_025;
  move_servo(speed, degree_array1);
  for (int i = 1; i <= count; i++) {
    int degree_array2[20] = pose_000;
    int degree_array3[20] = pose_012;
    move_servo(speed, degree_array2);
    move_servo(speed, degree_array3);
  }
  int degree_array4[20] = pose_025;
  move_servo(speed , degree_array4);
}

/******************************************************************************************************/

void hash_v3::hip_shake(int count, int speed) {

  int degree_array1[20] = pose_025;
  move_servo(speed, degree_array1);
  for (int i = 1; i <= count; i++) {
    int degree_array2[20] = pose_053;
    int degree_array3[20] = pose_006;
    move_servo(speed, degree_array2);
    move_servo(speed, degree_array3);
  }
  int degree_array4[20] = pose_025;
  move_servo(speed , degree_array4);
}

/******************************************************************************************************/

void hash_v3::bend_up(int count, int speed) {

  int degree_array1[20] = pose_025;
  move_servo(speed, degree_array1);
  for (int i = 1; i <= count; i++) {
    int degree_array2[20] = pose_062;
    int degree_array3[20] = pose_037;
    int degree_array4[20] = pose_062;
    int degree_array5[20] = pose_025;
    move_servo(speed, degree_array2);
    move_servo(speed, degree_array3);
    move_servo(speed, degree_array4);
    move_servo(speed, degree_array5);
  }
  int degree_array6[20] = pose_025;
  move_servo(speed , degree_array6);
}

/******************************************************************************************************/
